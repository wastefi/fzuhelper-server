// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package oa

import (
	"context"
	"fmt"
	"github.com/west2-online/fzuhelper-server/kitex_gen/model"
)

type CreateFeedbackRequest struct {
	ReportId       int64  `thrift:"report_id,1,required" frugal:"1,required,i64" json:"report_id"`
	StuId          string `thrift:"stu_id,2,required" frugal:"2,required,string" json:"stu_id"`
	Name           string `thrift:"name,3,required" frugal:"3,required,string" json:"name"`
	College        string `thrift:"college,4,required" frugal:"4,required,string" json:"college"`
	ContactPhone   string `thrift:"contact_phone,5,required" frugal:"5,required,string" json:"contact_phone"`
	ContactQq      string `thrift:"contact_qq,6,required" frugal:"6,required,string" json:"contact_qq"`
	ContactEmail   string `thrift:"contact_email,7,required" frugal:"7,required,string" json:"contact_email"`
	NetworkEnv     string `thrift:"network_env,8,required" frugal:"8,required,string" json:"network_env"`
	IsOnCampus     bool   `thrift:"is_on_campus,9,required" frugal:"9,required,bool" json:"is_on_campus"`
	OsName         string `thrift:"os_name,10,required" frugal:"10,required,string" json:"os_name"`
	OsVersion      string `thrift:"os_version,11,required" frugal:"11,required,string" json:"os_version"`
	Manufacturer   string `thrift:"manufacturer,12,required" frugal:"12,required,string" json:"manufacturer"`
	DeviceModel    string `thrift:"device_model,13,required" frugal:"13,required,string" json:"device_model"`
	ProblemDesc    string `thrift:"problem_desc,14,required" frugal:"14,required,string" json:"problem_desc"`
	Screenshots    string `thrift:"screenshots,15,required" frugal:"15,required,string" json:"screenshots"`
	AppVersion     string `thrift:"app_version,16,required" frugal:"16,required,string" json:"app_version"`
	VersionHistory string `thrift:"version_history,17,required" frugal:"17,required,string" json:"version_history"`
	NetworkTraces  string `thrift:"network_traces,18,required" frugal:"18,required,string" json:"network_traces"`
	Events         string `thrift:"events,19,required" frugal:"19,required,string" json:"events"`
	UserSettings   string `thrift:"user_settings,20,required" frugal:"20,required,string" json:"user_settings"`
}

func NewCreateFeedbackRequest() *CreateFeedbackRequest {
	return &CreateFeedbackRequest{}
}

func (p *CreateFeedbackRequest) InitDefault() {
}

func (p *CreateFeedbackRequest) GetReportId() (v int64) {
	return p.ReportId
}

func (p *CreateFeedbackRequest) GetStuId() (v string) {
	return p.StuId
}

func (p *CreateFeedbackRequest) GetName() (v string) {
	return p.Name
}

func (p *CreateFeedbackRequest) GetCollege() (v string) {
	return p.College
}

func (p *CreateFeedbackRequest) GetContactPhone() (v string) {
	return p.ContactPhone
}

func (p *CreateFeedbackRequest) GetContactQq() (v string) {
	return p.ContactQq
}

func (p *CreateFeedbackRequest) GetContactEmail() (v string) {
	return p.ContactEmail
}

func (p *CreateFeedbackRequest) GetNetworkEnv() (v string) {
	return p.NetworkEnv
}

func (p *CreateFeedbackRequest) GetIsOnCampus() (v bool) {
	return p.IsOnCampus
}

func (p *CreateFeedbackRequest) GetOsName() (v string) {
	return p.OsName
}

func (p *CreateFeedbackRequest) GetOsVersion() (v string) {
	return p.OsVersion
}

func (p *CreateFeedbackRequest) GetManufacturer() (v string) {
	return p.Manufacturer
}

func (p *CreateFeedbackRequest) GetDeviceModel() (v string) {
	return p.DeviceModel
}

func (p *CreateFeedbackRequest) GetProblemDesc() (v string) {
	return p.ProblemDesc
}

func (p *CreateFeedbackRequest) GetScreenshots() (v string) {
	return p.Screenshots
}

func (p *CreateFeedbackRequest) GetAppVersion() (v string) {
	return p.AppVersion
}

func (p *CreateFeedbackRequest) GetVersionHistory() (v string) {
	return p.VersionHistory
}

func (p *CreateFeedbackRequest) GetNetworkTraces() (v string) {
	return p.NetworkTraces
}

func (p *CreateFeedbackRequest) GetEvents() (v string) {
	return p.Events
}

func (p *CreateFeedbackRequest) GetUserSettings() (v string) {
	return p.UserSettings
}
func (p *CreateFeedbackRequest) SetReportId(val int64) {
	p.ReportId = val
}
func (p *CreateFeedbackRequest) SetStuId(val string) {
	p.StuId = val
}
func (p *CreateFeedbackRequest) SetName(val string) {
	p.Name = val
}
func (p *CreateFeedbackRequest) SetCollege(val string) {
	p.College = val
}
func (p *CreateFeedbackRequest) SetContactPhone(val string) {
	p.ContactPhone = val
}
func (p *CreateFeedbackRequest) SetContactQq(val string) {
	p.ContactQq = val
}
func (p *CreateFeedbackRequest) SetContactEmail(val string) {
	p.ContactEmail = val
}
func (p *CreateFeedbackRequest) SetNetworkEnv(val string) {
	p.NetworkEnv = val
}
func (p *CreateFeedbackRequest) SetIsOnCampus(val bool) {
	p.IsOnCampus = val
}
func (p *CreateFeedbackRequest) SetOsName(val string) {
	p.OsName = val
}
func (p *CreateFeedbackRequest) SetOsVersion(val string) {
	p.OsVersion = val
}
func (p *CreateFeedbackRequest) SetManufacturer(val string) {
	p.Manufacturer = val
}
func (p *CreateFeedbackRequest) SetDeviceModel(val string) {
	p.DeviceModel = val
}
func (p *CreateFeedbackRequest) SetProblemDesc(val string) {
	p.ProblemDesc = val
}
func (p *CreateFeedbackRequest) SetScreenshots(val string) {
	p.Screenshots = val
}
func (p *CreateFeedbackRequest) SetAppVersion(val string) {
	p.AppVersion = val
}
func (p *CreateFeedbackRequest) SetVersionHistory(val string) {
	p.VersionHistory = val
}
func (p *CreateFeedbackRequest) SetNetworkTraces(val string) {
	p.NetworkTraces = val
}
func (p *CreateFeedbackRequest) SetEvents(val string) {
	p.Events = val
}
func (p *CreateFeedbackRequest) SetUserSettings(val string) {
	p.UserSettings = val
}

func (p *CreateFeedbackRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateFeedbackRequest(%+v)", *p)
}

var fieldIDToName_CreateFeedbackRequest = map[int16]string{
	1:  "report_id",
	2:  "stu_id",
	3:  "name",
	4:  "college",
	5:  "contact_phone",
	6:  "contact_qq",
	7:  "contact_email",
	8:  "network_env",
	9:  "is_on_campus",
	10: "os_name",
	11: "os_version",
	12: "manufacturer",
	13: "device_model",
	14: "problem_desc",
	15: "screenshots",
	16: "app_version",
	17: "version_history",
	18: "network_traces",
	19: "events",
	20: "user_settings",
}

type CreateFeedbackResponse struct {
	Base *model.BaseResp `thrift:"base,1,required" frugal:"1,required,model.BaseResp" json:"base"`
}

func NewCreateFeedbackResponse() *CreateFeedbackResponse {
	return &CreateFeedbackResponse{}
}

func (p *CreateFeedbackResponse) InitDefault() {
}

var CreateFeedbackResponse_Base_DEFAULT *model.BaseResp

func (p *CreateFeedbackResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return CreateFeedbackResponse_Base_DEFAULT
	}
	return p.Base
}
func (p *CreateFeedbackResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}

func (p *CreateFeedbackResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *CreateFeedbackResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateFeedbackResponse(%+v)", *p)
}

var fieldIDToName_CreateFeedbackResponse = map[int16]string{
	1: "base",
}

type GetFeedbackRequest struct {
	ReportId int64 `thrift:"report_id,1,required" frugal:"1,required,i64" json:"report_id"`
}

func NewGetFeedbackRequest() *GetFeedbackRequest {
	return &GetFeedbackRequest{}
}

func (p *GetFeedbackRequest) InitDefault() {
}

func (p *GetFeedbackRequest) GetReportId() (v int64) {
	return p.ReportId
}
func (p *GetFeedbackRequest) SetReportId(val int64) {
	p.ReportId = val
}

func (p *GetFeedbackRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetFeedbackRequest(%+v)", *p)
}

var fieldIDToName_GetFeedbackRequest = map[int16]string{
	1: "report_id",
}

type GetFeedbackResponse struct {
	Base *model.BaseResp `thrift:"base,1,required" frugal:"1,required,model.BaseResp" json:"base"`
	Data *model.Feedback `thrift:"data,2,optional" frugal:"2,optional,model.Feedback" json:"data,omitempty"`
}

func NewGetFeedbackResponse() *GetFeedbackResponse {
	return &GetFeedbackResponse{}
}

func (p *GetFeedbackResponse) InitDefault() {
}

var GetFeedbackResponse_Base_DEFAULT *model.BaseResp

func (p *GetFeedbackResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return GetFeedbackResponse_Base_DEFAULT
	}
	return p.Base
}

var GetFeedbackResponse_Data_DEFAULT *model.Feedback

func (p *GetFeedbackResponse) GetData() (v *model.Feedback) {
	if !p.IsSetData() {
		return GetFeedbackResponse_Data_DEFAULT
	}
	return p.Data
}
func (p *GetFeedbackResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *GetFeedbackResponse) SetData(val *model.Feedback) {
	p.Data = val
}

func (p *GetFeedbackResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *GetFeedbackResponse) IsSetData() bool {
	return p.Data != nil
}

func (p *GetFeedbackResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetFeedbackResponse(%+v)", *p)
}

var fieldIDToName_GetFeedbackResponse = map[int16]string{
	1: "base",
	2: "data",
}

type OAService interface {
	CreateFeedback(ctx context.Context, request *CreateFeedbackRequest) (r *CreateFeedbackResponse, err error)

	GetFeedback(ctx context.Context, request *GetFeedbackRequest) (r *GetFeedbackResponse, err error)
}

type OAServiceCreateFeedbackArgs struct {
	Request *CreateFeedbackRequest `thrift:"request,1" frugal:"1,default,CreateFeedbackRequest" json:"request"`
}

func NewOAServiceCreateFeedbackArgs() *OAServiceCreateFeedbackArgs {
	return &OAServiceCreateFeedbackArgs{}
}

func (p *OAServiceCreateFeedbackArgs) InitDefault() {
}

var OAServiceCreateFeedbackArgs_Request_DEFAULT *CreateFeedbackRequest

func (p *OAServiceCreateFeedbackArgs) GetRequest() (v *CreateFeedbackRequest) {
	if !p.IsSetRequest() {
		return OAServiceCreateFeedbackArgs_Request_DEFAULT
	}
	return p.Request
}
func (p *OAServiceCreateFeedbackArgs) SetRequest(val *CreateFeedbackRequest) {
	p.Request = val
}

func (p *OAServiceCreateFeedbackArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *OAServiceCreateFeedbackArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceCreateFeedbackArgs(%+v)", *p)
}

var fieldIDToName_OAServiceCreateFeedbackArgs = map[int16]string{
	1: "request",
}

type OAServiceCreateFeedbackResult struct {
	Success *CreateFeedbackResponse `thrift:"success,0,optional" frugal:"0,optional,CreateFeedbackResponse" json:"success,omitempty"`
}

func NewOAServiceCreateFeedbackResult() *OAServiceCreateFeedbackResult {
	return &OAServiceCreateFeedbackResult{}
}

func (p *OAServiceCreateFeedbackResult) InitDefault() {
}

var OAServiceCreateFeedbackResult_Success_DEFAULT *CreateFeedbackResponse

func (p *OAServiceCreateFeedbackResult) GetSuccess() (v *CreateFeedbackResponse) {
	if !p.IsSetSuccess() {
		return OAServiceCreateFeedbackResult_Success_DEFAULT
	}
	return p.Success
}
func (p *OAServiceCreateFeedbackResult) SetSuccess(x interface{}) {
	p.Success = x.(*CreateFeedbackResponse)
}

func (p *OAServiceCreateFeedbackResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *OAServiceCreateFeedbackResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceCreateFeedbackResult(%+v)", *p)
}

var fieldIDToName_OAServiceCreateFeedbackResult = map[int16]string{
	0: "success",
}

type OAServiceGetFeedbackArgs struct {
	Request *GetFeedbackRequest `thrift:"request,1" frugal:"1,default,GetFeedbackRequest" json:"request"`
}

func NewOAServiceGetFeedbackArgs() *OAServiceGetFeedbackArgs {
	return &OAServiceGetFeedbackArgs{}
}

func (p *OAServiceGetFeedbackArgs) InitDefault() {
}

var OAServiceGetFeedbackArgs_Request_DEFAULT *GetFeedbackRequest

func (p *OAServiceGetFeedbackArgs) GetRequest() (v *GetFeedbackRequest) {
	if !p.IsSetRequest() {
		return OAServiceGetFeedbackArgs_Request_DEFAULT
	}
	return p.Request
}
func (p *OAServiceGetFeedbackArgs) SetRequest(val *GetFeedbackRequest) {
	p.Request = val
}

func (p *OAServiceGetFeedbackArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *OAServiceGetFeedbackArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceGetFeedbackArgs(%+v)", *p)
}

var fieldIDToName_OAServiceGetFeedbackArgs = map[int16]string{
	1: "request",
}

type OAServiceGetFeedbackResult struct {
	Success *GetFeedbackResponse `thrift:"success,0,optional" frugal:"0,optional,GetFeedbackResponse" json:"success,omitempty"`
}

func NewOAServiceGetFeedbackResult() *OAServiceGetFeedbackResult {
	return &OAServiceGetFeedbackResult{}
}

func (p *OAServiceGetFeedbackResult) InitDefault() {
}

var OAServiceGetFeedbackResult_Success_DEFAULT *GetFeedbackResponse

func (p *OAServiceGetFeedbackResult) GetSuccess() (v *GetFeedbackResponse) {
	if !p.IsSetSuccess() {
		return OAServiceGetFeedbackResult_Success_DEFAULT
	}
	return p.Success
}
func (p *OAServiceGetFeedbackResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetFeedbackResponse)
}

func (p *OAServiceGetFeedbackResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *OAServiceGetFeedbackResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceGetFeedbackResult(%+v)", *p)
}

var fieldIDToName_OAServiceGetFeedbackResult = map[int16]string{
	0: "success",
}
